//*************************************************************************************************
// 内容:	Water Ripple Decal, 角色扰动波纹
//---------------------------------------------------------
// 作者:		
// 创建:		2012-10-31
// 最后修改:	
//*************************************************************************************************
#include "water_common.h"

//---------------------------------------------------------------------------------------
// 输入变量
//---------------------------------------------------------------------------------------
// 角色扰动波纹
float	g_fRippleInfluence	: GLOBAL = 1.f;

//---------------------------------------------------------------------------------------
// 输入纹理采样器
//---------------------------------------------------------------------------------------
SD_LINEAR_CLAMP_SAMPLE(0, sdRippleNormalSampler,	sdRippleNormalTex,	false);	// 水面角色波纹扰动纹理

//---------------------------------------------------------------------------------------
// 顶点着色器输入数据流
//---------------------------------------------------------------------------------------
struct VS_INPUT
{
	float3	vPos	: POSITION0;
	float2	vUVSet0	: TEXCOORD0;
};

//---------------------------------------------------------------------------------------
// 顶点着色器输出数据流
//---------------------------------------------------------------------------------------
struct VS_OUTPUT
{
	float4	vProjPos	: POSITION;
	float2	vUVSet0		: TEXCOORD0;	
};

//---------------------------------------------------------------------------------------
// 顶点着色器
//---------------------------------------------------------------------------------------
VS_OUTPUT VS_Main(VS_INPUT kInput)
{
	VS_OUTPUT kOutput = (VS_OUTPUT)0;
	kOutput.vProjPos = mul(float4(kInput.vPos, 1.f), g_mWorldViewProj);
	kOutput.vUVSet0 = kInput.vUVSet0;
	return kOutput;
}

//---------------------------------------------------------------------------------------
// 像素着色器
//---------------------------------------------------------------------------------------
float4 PS_Main(VS_OUTPUT kInput) : COLOR0
{
	float3 vNormal = tex2D(sdRippleNormalSampler, kInput.vUVSet0).rgb * 2.f - 1.f;
	return float4(vNormal - float3(0, 0, 1.f), g_fRippleInfluence);
}

//---------------------------------------------------------------------------------------
// 着色技术
//---------------------------------------------------------------------------------------
// 角色波纹扰动
technique Water_WaterRippleDecal
<
	string Description = "Water_WaterRippleDecal";
	bool UsesNiRenderState = false;
	bool UsesNiLightState = false;
>
{
	pass P0
	{
		VertexShader 	= compile vs_2_0 VS_Main ();
		PixelShader 	= compile ps_2_0 PS_Main ();
		
		//CullMode = None;
		//ZEnable = false;
		//ZWriteEnable = false;
		//AlphaTestEnable = false;
		//AlphaBlendEnable = true;
		//BlendOp = Add;
		//SrcBlend = SrcAlpha;
		//DestBlend = One;
	}
}
//---------------------------------------------------------------------------------------